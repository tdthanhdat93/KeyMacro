<UserControl
    x:Class="KeyMacroApp.Views.MacroView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:KeyMacroApp.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:KeyMacroApp.Models"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:uicontrol="clr-namespace:KeyMacroApp.UIControl"
    xmlns:viewmodels="clr-namespace:KeyMacroApp.ViewModels"
    d:DataContext="{d:DesignInstance Type=viewmodels:MacroViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="False"
    mc:Ignorable="d">
    <UserControl.Resources />
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <GroupBox
            Grid.Column="0"
            Padding="5"
            Header="List macro">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <DockPanel LastChildFill="False">
                    <Button
                        Margin="5"
                        Padding="3"
                        Command="{Binding AddMacroCommand}"
                        Content="Add Macro"
                        DockPanel.Dock="Right" />
                    <Button
                        Command="{Binding AddGroupCommand}"
                        Content="Add Group"
                        DockPanel.Dock="Right" />
                </DockPanel>
                <TreeView
                    Grid.Row="1"
                    ItemsSource="{Binding MacroAllData.Items}"
                    PreviewMouseRightButtonDown="TreeView_PreviewMouseRightButtonDown">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type models:MacroGroup}" ItemsSource="{Binding Items}">
                            <uicontrol:EditableTextBlock IsEditable="{Binding IsInEditMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type models:MacroInfo}">
                            <uicontrol:EditableTextBlock IsEditable="{Binding IsInEditMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                        </DataTemplate>

                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightColorKey}}" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource {x:Static SystemColors.HighlightTextColorKey}}" />
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedItemChanged">
                            <i:InvokeCommandAction Command="{Binding SelectMacroCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeView}, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding AddMacroCommand}" Header="New Macro" />
                            <MenuItem Command="{Binding RenameCommand}" Header="Rename" />
                            <MenuItem Command="{Binding DeleteCommand}" Header="Delete" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                </TreeView>
            </Grid>
        </GroupBox>

        <GroupBox
            Grid.Column="1"
            MaxWidth="322"
            Margin="15,0,0,0"
            Padding="5"
            Header="Macro Key Hook">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel
                    Grid.Row="0"
                    Width="300"
                    Orientation="Vertical">
                    <WrapPanel>
                        <ToggleButton
                            Margin="5"
                            HorizontalAlignment="Left"
                            Command="{Binding RecordCommand}"
                            CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                            Content="Record Key" />
                        <TextBlock Margin="5" Text="{Binding RecordState}" />
                    </WrapPanel>
                    <ListBox Height="150" ItemsSource="{Binding SelectedMacro.KeyHooks}">
                        <ListBox.Resources>
                            <DataTemplate DataType="{x:Type models:KeyHook}">
                                <WrapPanel>
                                    <TextBlock Text="{Binding KeyCode, StringFormat=0x{0:x2}}" />
                                    <TextBlock Margin="5,0,0,0" Text="{Binding State}" />
                                </WrapPanel>
                            </DataTemplate>
                        </ListBox.Resources>
                    </ListBox>
                </StackPanel>
                <StackPanel Grid.Row="1" Margin="0,15,0,0">
                    <Button
                        Margin="5"
                        HorizontalAlignment="Left"
                        Click="ButtonReplay_Click"
                        Command="{Binding ReplayCommand}"
                        Content="Replay" />
                    <TextBox
                        x:Name="txtbxReplay"
                        Height="150"
                        TextWrapping="Wrap"
                        VerticalScrollBarVisibility="Auto" />
                </StackPanel>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
